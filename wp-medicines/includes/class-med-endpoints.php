<?php

class Med_Endpoints {
	/**
	 * Endpoint namespace.
	 *
	 * @var string
	 */
	protected $namespace = 'med/v3';

	/**
	 * Route base.
	 *
	 * @var string
	 */
	protected $rest_base = 'medicines';

	/**
	 * Post type.
	 *
	 * @var string
	 */
	protected $post_type = 'medicines';

	public function __construct() {
		add_action('rest_api_init', array($this, 'register_routes'), 20);
	}

	public function register_routes() {
		// Route/Endpoint registered for creating the medicine post
		register_rest_route(
			$this->namespace, '/' . $this->rest_base, // @codingStandardsIgnoreLine.
			array(
				array(
					'methods'             => \WP_REST_Server::CREATABLE,
					'callback'            => array( $this, 'create_medicine' ),
					'permission_callback' => function () {
			            return current_user_can('edit_medicines');
			        },
			        'args' => array(
			            'title' => array(
							'type'        => 'string',
							'description' => __( 'Title of the Medicine.', 'wp-medicines' ),
							'required'    => true,
						),
			            'post_content' => array(
							'type'        => 'string',
							'description' => __( 'Content of the Medicine.', 'wp-medicines' ),
							'required'    => false,
						),
			            'med_expiry' => array(
							'type'        => 'string',
							'description' => __( 'Expiry date for the medicine', 'wp-medicines' ),
							'required'    => false,
						),
			            'med_price' => array(
							'type'        => 'string',
							'description' => __( 'Price of the Medicine.', 'wp-medicines' ),
							'required'    => false,
						),
			            'med_type' => array(
							'type'        => 'string',
							'description' => __( 'Type of Medicine.', 'wp-medicines' ),
							'required'    => false,
						),
			            'mfg_company' => array(
							'type'        => 'string',
							'description' => __( 'Name of Manifacturing company.', 'wp-medicines' ),
							'required'    => false,
						),
			        ),
				),
			)
		);


		// GET - Retrieve all medicine posts.
		// (/wp-json/med/v3/medicines).
		register_rest_route(
			$this->namespace, '/' . $this->rest_base, // @codingStandardsIgnoreLine.
			array(
				array(
					'methods'             => \WP_REST_Server::READABLE,
					'callback'            => array( $this, 'get_medicines_post' ),
					'permission_callback' => function () {
			            return current_user_can('read');
			            // return true;
			        },
				),
			)
		);
	}

	/**
	 * Returns all medicines post details.
	 *
	 * @param WP_REST_Request $request Full details about the request.
	 * @return WP_Error|WP_REST_Response
	 */
	public function get_medicines_post( $request ) {
	    $args = array(
	        'post_type' => 'medicines',
	        'posts_per_page' => 10
	    );

	    $query = new WP_Query( $args );
	    $posts = $query->posts;

	    $response = array();

	    foreach ( $posts as $post ) {
	        $response[] = array(
	            'id' => $post->ID,
	            'title' => $post->post_title,
	            'content' => $post->post_content,
	            'med_mfg_company' => get_post_meta($post->ID, 'med_mfg_company', true),
	            'med_type' => get_post_meta($post->ID, 'med_type', true),
	            'price' => get_post_meta($post->ID, 'price', true),
	            'med_expiry' => get_post_meta($post->ID, 'med_expiry', true),
	        );
	    }

		/**
		 * Filter the API response data for the third party.
		 * 
		 * @param object $response responce data generated by API callback.
		 * @param object $request API request data.
		 */
		return apply_filters( 'med_get_post_data', new WP_REST_Response( $response, 200 ), $request );
	}

	/**
	 * Add a new medicine.
	 *
	 * @param WP_REST_Request $request Full details about the request.
	 * @return WP_Error|WP_REST_Response
	 */
	public function create_medicine( $request) {
		$response     = array();
		$existingData = array();

		$title   = $this->get_default_data( $request, 'title' );
		$content = $this->get_default_data( $request, 'post_content' );
		$postarr = array(
	        'post_title' => $title,
	        'post_content' => $content,
	        'post_status' => 'publish',
	        'post_type' => 'medicines',
	    );

	    $post_id = wp_insert_post( $postarr, true );
	    if (is_wp_error( $post_id ) ) {
	        return rest_ensure_response( $post_id->get_error_message() );
	    }

	    // Adding extra custom meta to the created medicjne post
		add_post_meta( $post_id, 'med_type', $this->get_default_data( $request, 'med_type' ) );
		add_post_meta( $post_id, 'med_expiry', $this->get_default_data( $request, 'med_expiry' ) );
		add_post_meta( $post_id, 'price', $this->get_default_data( $request, 'price' ) );
		add_post_meta( $post_id, 'med_mfg_company', $this->get_default_data( $request, 'med_mfg_company' ) );
	    
        $post = get_post( $post_id );

	    $response = array(
	        'status' => 'success',
	        'message' => 'Post created',
	        'data' => $post,
            'med_mfg_company' => get_post_meta($post_id, 'med_mfg_company', true),
            'med_type' => get_post_meta($post_id, 'med_type', true),
            'price' => get_post_meta($post_id, 'price', true),
            'med_expiry' => get_post_meta($post_id, 'med_expiry', true),
        );

		/**
		 * Filter the API response data by third party
		 * 
		 * @param object $response responce data generated by API callback.
		 * @param object $request API request data.
		 */
		return apply_filters('med_create_post_response', rest_ensure_response( $response ), $request);
	}

	public function get_default_data( $request, $key ) {
		$med_data = 0;

		switch ( $key ) {
			case 'title':
			case 'post_content':
			case 'med_type':
			case 'med_mfg_company':
			case 'med_expiry':
				$data = $request->get_param( $key );
				$med_data = isset( $data ) ? sanitize_text_field( wp_unslash( $data ) ) : '';
				break;
			case 'price':
				$data = $request->get_param( $key );
				$med_data = isset( $data ) ? sanitize_text_field( wp_unslash( $data ) ) : 0;
				break;
		}

		/**
		 * This filter can be use to filter out the CSP rule data submitted in the API request.
		 * 
		 * @param array $med_data Data submited by API request.
		 * @param string $key key for which data value is being retrived.
		 */
		return apply_filters('medapi_default_data_if_missing', $med_data, $key);

	}
}
return new Med_Endpoints();